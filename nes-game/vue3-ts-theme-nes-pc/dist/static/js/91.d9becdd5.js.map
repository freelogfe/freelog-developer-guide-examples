{"version":3,"file":"static/js/91.d9becdd5.js","mappings":"kNAGA,MAAMA,EAAa,CAAEC,MAAO,kCACtBC,GAA0BC,EAAAA,EAAAA,IAAoB,MAAO,CAAEC,GAAI,gBAAkB,MAAO,GACpFC,EAAa,CACjBH,GAOF,OAA4BI,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,WACRC,MAAO,CACLJ,GAAI,CAAC,GAEPK,KAAAA,CAAMC,GCRR,MAAMC,GAAgBC,EAAAA,EAAAA,IAAI,CAAC,GACrBJ,EAAQE,EAId,IAAIG,EAAkB,KACtB,MAAMC,GAAUF,EAAAA,EAAAA,IAAI,IACdG,GAAWH,EAAAA,EAAAA,IAAI,KACrBI,EAAAA,EAAAA,KACE,IAAMR,EAAMJ,KACXa,IACMA,GACLC,EAAAA,GAAWC,eAAeF,GAAKG,MAAKC,UAC9BC,EAAIC,KAAKC,QACXC,EAAAA,GAAQC,MAAMJ,EAAIC,KAAKI,MAGzBb,EAAQc,YAAcV,EAAAA,GAAWW,qBAC/BP,EAAIC,KAAKA,KAAKO,UACd,CACEC,WAAW,IAGfhB,EAASa,MAAQN,EAAIC,KAAKA,KAAKS,YAC1BnB,EAILF,EAAciB,MAAMK,UAAUnB,EAAQc,MAAOb,EAASa,OAHpDM,EAAmBpB,EAAQc,MAAOb,EAASa,OAGe,GAC5D,GAEJ,CAAEO,WAAW,KAIfC,EAAAA,EAAAA,KAAYf,gBACJR,GAAYwB,UAAS,IAE7B,MAAMH,EAAqBb,MAAOiB,EAAaC,KAC7C,MAAMC,QAAgBtB,EAAAA,GAAWuB,wBACjCD,EAAQE,SAAQrB,UACU,uBAApBsB,EAAIC,cACN/B,QAAmBK,EAAAA,GAAWgB,mBAAmB,CAC/CW,UAAWF,EAAIE,UACfC,UAAWH,EAAIG,UACfC,IAAKJ,EAAII,IACTC,aAAc9B,EAAAA,GAAW+B,kBACzBC,UAAWC,SAASC,eAAe,gBACnCC,oBAAqB,CACnB9B,KAAM,CACJ+B,eAAgBhB,EAChBiB,gBAAiBhB,EACjBiB,YAAcC,IACZ9C,EAAciB,MAAQ6B,CAAG,GAG7BC,WAAY,CACVC,QAAUC,IACRC,QAAQC,IAAIF,EAAG,UAAU,IAI/BG,IAAK,EACLC,aAAc,2B,GAGlB,EDWJ,MAAO,CAACC,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOpE,EAAYK,GAE/D,IEvFA,MAAMgE,EAAc,EAEpB,O","sources":["webpack://vue3-ts-theme-/./src/views/HomeView.vue?20bf","webpack://vue3-ts-theme-/./src/views/HomeView.vue","webpack://vue3-ts-theme-/./src/views/HomeView.vue?a53b"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-100x h-100x p-20 flex-column\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { id: \"freelog-game\" }, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nimport { freelogApp, ExhibitAuthNodeInfo } from \"freelog-runtime\";\r\nimport { ref, onUnmounted, watch } from \"vue\";\r\nimport { message } from \"ant-design-vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  props: {\n    id: {}\n  },\n  setup(__props: any) {\n\r\nconst selfWidgetApi = ref({} as any);\r\nconst props = __props;\r\n\r\nlet selfWidget: any = null;\r\nconst gameUrl = ref(\"\");\r\nconst gameName = ref(\"\");\r\nwatch(\r\n  () => props.id,\r\n  (val: any) => {\r\n    if (!val) return;\r\n    freelogApp.getExhibitInfo(val).then(async (res: any) => {\r\n      if (res.data.errCode) {\r\n        message.error(res.data.msg);\r\n        return;\r\n      }\r\n      gameUrl.value = await freelogApp.getExhibitFileStream(\r\n        res.data.data.exhibitId,\r\n        {\r\n          returnUrl: true,\r\n        }\r\n      );\r\n      gameName.value = res.data.data.exhibitName;\r\n      if (!selfWidget) {\r\n        mountArticleWidget(gameUrl.value, gameName.value);\r\n        return;\r\n      }\r\n      selfWidgetApi.value.startGame(gameUrl.value, gameName.value);\r\n    });\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n// 离开记得卸载插件喔\r\nonUnmounted(async () => {\r\n  await selfWidget?.unmount();\r\n});\r\nconst mountArticleWidget = async (url: string, name: string) => {\r\n  const subData = await freelogApp.getSelfDependencyTree();\r\n  subData.forEach(async (sub: ExhibitAuthNodeInfo) => {\r\n    if (sub.articleName === \"snnaenu/nes-widget\") {\r\n      selfWidget = await freelogApp.mountArticleWidget({\r\n        articleId: sub.articleId,\r\n        parentNid: sub.parentNid,\r\n        nid: sub.nid,\r\n        topExhibitId: freelogApp.getTopExhibitId(),\r\n        container: document.getElementById(\"freelog-game\") as HTMLElement, // 必传，自定义一个让插件挂载的div容器\r\n        renderWidgetOptions: {\r\n          data: {\r\n            defaultGameUrl: url,\r\n            defaultGameName: name,\r\n            registerApi: (api: any) => {\r\n              selfWidgetApi.value = api;\r\n            },\r\n          },\r\n          lifeCycles: {\r\n            mounted: (e: CustomEvent) => {\r\n              console.log(e, \"mounted\");\r\n            },\r\n          },\r\n        },\r\n        seq: 0, // 如果要用多个同样的子插件需要传递序号，可以考虑与其余节点插件避免相同的序号, 注意用户数据是根据插件id+序号保存的。\r\n        widget_entry: \"https://localhost:8203\", // 本地url，dev模式下，可以使用本地url调试子插件\r\n      });\r\n    }\r\n  });\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3))\n}\n}\n\n})","<template>\r\n  <div class=\"w-100x h-100x p-20 flex-column\">\r\n    <div id=\"freelog-game\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { freelogApp, ExhibitAuthNodeInfo } from \"freelog-runtime\";\r\nimport { ref, onUnmounted, watch } from \"vue\";\r\nimport { message } from \"ant-design-vue\";\r\nconst selfWidgetApi = ref({} as any);\r\nconst props = defineProps<{\r\n  id: string;\r\n}>();\r\n\r\nlet selfWidget: any = null;\r\nconst gameUrl = ref(\"\");\r\nconst gameName = ref(\"\");\r\nwatch(\r\n  () => props.id,\r\n  (val: any) => {\r\n    if (!val) return;\r\n    freelogApp.getExhibitInfo(val).then(async (res: any) => {\r\n      if (res.data.errCode) {\r\n        message.error(res.data.msg);\r\n        return;\r\n      }\r\n      gameUrl.value = await freelogApp.getExhibitFileStream(\r\n        res.data.data.exhibitId,\r\n        {\r\n          returnUrl: true,\r\n        }\r\n      );\r\n      gameName.value = res.data.data.exhibitName;\r\n      if (!selfWidget) {\r\n        mountArticleWidget(gameUrl.value, gameName.value);\r\n        return;\r\n      }\r\n      selfWidgetApi.value.startGame(gameUrl.value, gameName.value);\r\n    });\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n// 离开记得卸载插件喔\r\nonUnmounted(async () => {\r\n  await selfWidget?.unmount();\r\n});\r\nconst mountArticleWidget = async (url: string, name: string) => {\r\n  const subData = await freelogApp.getSelfDependencyTree();\r\n  subData.forEach(async (sub: ExhibitAuthNodeInfo) => {\r\n    if (sub.articleName === \"snnaenu/nes-widget\") {\r\n      selfWidget = await freelogApp.mountArticleWidget({\r\n        articleId: sub.articleId,\r\n        parentNid: sub.parentNid,\r\n        nid: sub.nid,\r\n        topExhibitId: freelogApp.getTopExhibitId(),\r\n        container: document.getElementById(\"freelog-game\") as HTMLElement, // 必传，自定义一个让插件挂载的div容器\r\n        renderWidgetOptions: {\r\n          data: {\r\n            defaultGameUrl: url,\r\n            defaultGameName: name,\r\n            registerApi: (api: any) => {\r\n              selfWidgetApi.value = api;\r\n            },\r\n          },\r\n          lifeCycles: {\r\n            mounted: (e: CustomEvent) => {\r\n              console.log(e, \"mounted\");\r\n            },\r\n          },\r\n        },\r\n        seq: 0, // 如果要用多个同样的子插件需要传递序号，可以考虑与其余节点插件避免相同的序号, 注意用户数据是根据插件id+序号保存的。\r\n        widget_entry: \"https://localhost:8203\", // 本地url，dev模式下，可以使用本地url调试子插件\r\n      });\r\n    }\r\n  });\r\n};\r\n</script>\r\n<style scoped></style>\r\n","import script from \"./HomeView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./HomeView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_createElementVNode","id","_hoisted_3","_defineComponent","__name","props","setup","__props","selfWidgetApi","ref","selfWidget","gameUrl","gameName","watch","val","freelogApp","getExhibitInfo","then","async","res","data","errCode","message","error","msg","value","getExhibitFileStream","exhibitId","returnUrl","exhibitName","startGame","mountArticleWidget","immediate","onUnmounted","unmount","url","name","subData","getSelfDependencyTree","forEach","sub","articleName","articleId","parentNid","nid","topExhibitId","getTopExhibitId","container","document","getElementById","renderWidgetOptions","defaultGameUrl","defaultGameName","registerApi","api","lifeCycles","mounted","e","console","log","seq","widget_entry","_ctx","_cache","_openBlock","_createElementBlock","__exports__"],"sourceRoot":""}