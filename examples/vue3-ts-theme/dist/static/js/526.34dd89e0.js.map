{"version":3,"file":"static/js/526.34dd89e0.js","mappings":"mNAGA,MAAMA,EAAa,CACjBC,IAAK,EACLC,MAAO,CAAC,MAAQ,YAMlB,OAA4B,QAAiB,CAC3CC,OAAQ,UACRC,MAAO,CACLC,SAAU,CAAC,GAEb,KAAAC,CAAMC,GAER,MAAMH,EAAQG,EAId,MAAO,CAACC,EAAUC,KAChB,MAAMC,GAAoB,QAAkB,UAE5C,OAAQN,EAAMC,UAAUM,SACnB,WAAc,QAAaD,EAAmB,CAC7CT,IAAK,EACL,YAAaG,EAAMC,SACnBO,kBAAkB,EAClBC,kBAAkB,GACjB,CACDC,OAAO,SAAS,EAAGA,QAAOb,SAAU,CACzB,YAARA,IACI,WAAc,QAAoB,OAAQD,GAAY,QAAiBc,GAAQ,MAC/E,WAAc,QAAoB,KAAW,CAAEb,IAAK,GAAK,EACxD,SAAiB,QAAiBa,GAAQ,IACzC,QAETC,EAAG,GACF,EAAG,CAAC,gBACP,QAAoB,IAAI,EAAK,CAEnC,ICxCA,MAAMC,EAAc,EAEpB,QCFA,MAAM,EAAa,CAAEC,MAAO,kCACtBC,GAA0B,QAAmB,yfAA0gB,GACvjBC,EAAa,CAAEF,MAAO,oDACtBG,GAA0B,IAAAL,GAAoB,MAAO,CAAEE,MAAO,mCAAqC,SAAU,GAMnH,OAA4B,QAAiB,CAC3Cd,OAAQ,YACR,KAAAG,CAAMC,GCsBR,MAAMF,GAAW,QAAI,IDUrB,OCTA,EAAAgB,WAAA,YAAuBC,MAAMC,IAC3B,GAAIA,EAAIC,OAAQ,CACd,IAAIC,EAAqB,GACzBF,EAAIC,OAAOE,SAASC,IAClBF,EAAIG,KAAKD,EAAIE,IAAI,IAEnB,EAAAR,WAAA,kBACqB,EAAAA,WAAA,mBAA+B,CAChDS,mBAAmB,IAEpBR,MAAMC,IACL,MAAMQ,EAAOR,EAAIS,KAAKA,KAAK,GACrBC,EAAOV,EAAIS,KAAKA,KAAK,GAAGE,aAC9B7B,EAAS8B,MAAQ,CACf,CACErB,MAAOiB,EAAKK,aAAe,WAC3BnC,IAAK8B,EAAKM,WACVC,SAAUL,EAAKM,KAAKC,IACX,CACL1B,MAAO0B,EAAKJ,aAAe,WAC3BnC,IAAKuC,EAAKH,gBAIjB,GAEN,KDjBI,CAAC7B,EAAUC,MACR,WAAc,QAAoB,MAAO,EAAY,CAC3DS,GACA,IAAAH,GAAoB,MAAOI,EAAY,CACrCC,GACA,QAAaqB,EAAS,CAAEpC,SAAUA,EAAS8B,OAAS,KAAM,EAAG,CAAC,iBAIpE,IEpDA,MAAM,EAAc,EAEpB,O","sources":["webpack://vue3-ts-theme-[name]/./src/views/widget/_components/DepTree.vue?58cf","webpack://vue3-ts-theme-[name]/./src/views/widget/_components/DepTree.vue","webpack://vue3-ts-theme-[name]/./src/views/widget/WidgetDep.vue?7f1a","webpack://vue3-ts-theme-[name]/./src/views/widget/WidgetDep.vue","webpack://vue3-ts-theme-[name]/./src/views/widget/WidgetDep.vue?2eb0"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  style: {\"color\":\"#1890ff\"}\n}\n\nimport type { TreeProps } from \"ant-design-vue\";\r\nimport { ref, watch } from \"vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DepTree',\n  props: {\n    treeData: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_tree = _resolveComponent(\"a-tree\")!\n\n  return (props.treeData?.length)\n    ? (_openBlock(), _createBlock(_component_a_tree, {\n        key: 0,\n        \"tree-data\": props.treeData,\n        defaultExpandAll: true,\n        autoExpandParent: true\n      }, {\n        title: _withCtx(({ title, key }) => [\n          (key === '0-0-1-0')\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(title), 1))\n            : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                _createTextVNode(_toDisplayString(title), 1)\n              ], 64))\n        ]),\n        _: 1\n      }, 8, [\"tree-data\"]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","import script from \"./DepTree.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./DepTree.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-100x h-100x p-40 flex-column\" }\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"f-regular fw-medium flex-column mb-40 pb-20 bb-1\\\"><div class=\\\"text-align-left f-title-1 mb-10\\\">涉及api：</div><div class=\\\"text-align-left pl-40 mb-10\\\"><span class=\\\"f-title-3 mr-10\\\">获取自身展品id: </span><span class=\\\"f-title-4\\\">freelogApp.getSelfExhibitId()</span></div><div class=\\\"text-align-left pl-40 mb-10 flex-row\\\"><span class=\\\"f-title-3 mr-10\\\">获取自身展品依赖: </span><span class=\\\"f-title-4\\\">freelogApp.getExhibitDepTree(freelogApp.getSelfExhibitId(), { isContainRootNode: true, })</span></div></div>\", 1)\nconst _hoisted_3 = { class: \"f-regular fw-medium flex-column mb-40 bb-1 pb-20\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-align-left f-title-1 mb-10\" }, \"效果展示：\", -1)\n\nimport { freelogApp } from \"freelog-runtime\";\nimport { reactive, ref } from \"vue\";\nimport DepTree from \"./_components/DepTree.vue\";\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WidgetDep',\n  setup(__props) {\n\nconst treeData = ref([] as any[]);\nfreelogApp.getSubDep().then((res: any) => {\n  if (res.subDep) {\n    let str: Array<string> = [];\n    res.subDep.forEach((sub: any) => {\n      str.push(sub.nid);\n    });\n    freelogApp\n      .getExhibitDepTree(freelogApp.getSelfExhibitId(), {\n        isContainRootNode: true,\n      })\n      .then((res: any) => {\n        const self = res.data.data[0];\n        const deps = res.data.data[0].dependencies;\n        treeData.value = [\n          {\n            title: self.resourceName + \"  (我是自身)\",\n            key: self.resourceId,\n            children: deps.map((item: any) => {\n              return {\n                title: item.resourceName + \"  (我是依赖)\",\n                key: item.resourceId,\n              };\n            }),\n          },\n        ];\n      });\n  }\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _hoisted_4,\n      _createVNode(DepTree, { treeData: treeData.value }, null, 8, [\"treeData\"])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"w-100x h-100x p-40 flex-column\">\n    <div class=\"f-regular fw-medium flex-column mb-40 pb-20 bb-1\">\n      <div class=\"text-align-left f-title-1 mb-10\">涉及api：</div>\n      <div class=\"text-align-left pl-40 mb-10\">\n        <span class=\"f-title-3 mr-10\">获取自身展品id: </span>\n        <span class=\"f-title-4\">freelogApp.getSelfExhibitId()</span>\n      </div>\n      <div class=\"text-align-left pl-40 mb-10 flex-row\">\n        <span class=\"f-title-3 mr-10\">获取自身展品依赖: </span>\n        <span class=\"f-title-4\"\n          >freelogApp.getExhibitDepTree(freelogApp.getSelfExhibitId(), {\n          isContainRootNode: true, })</span\n        >\n      </div>\n    </div>\n    <div class=\"f-regular fw-medium flex-column mb-40 bb-1 pb-20\">\n      <div class=\"text-align-left f-title-1 mb-10\">效果展示：</div>\n      <DepTree :treeData=\"treeData\" />\n    </div>\n    <!-- <div class=\"f-regular fw-medium flex-column mb-40 bb-1 pb-20\">\n      <div class=\"text-align-left f-title-1 mb-10\">设计缺陷或优化思考：</div>\n      <span class=\"f-title-4 pl-40 text-align-left\"\n        >缺陷：插件需要判断自己是主题还是插件、判断自己是展品还是依赖的资源。当前支持判断，但没有明确，需要明确的方法支持\n      </span>\n      <span class=\"f-title-4 pl-40 text-align-left\"\n        >优化：当前场景不应该需要插件去判断，自动识别，通过唯一的作品id去获取\n      </span>\n    </div> -->\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { freelogApp } from \"freelog-runtime\";\nimport { reactive, ref } from \"vue\";\nimport DepTree from \"./_components/DepTree.vue\";\nconst treeData = ref([] as any[]);\nfreelogApp.getSubDep().then((res: any) => {\n  if (res.subDep) {\n    let str: Array<string> = [];\n    res.subDep.forEach((sub: any) => {\n      str.push(sub.nid);\n    });\n    freelogApp\n      .getExhibitDepTree(freelogApp.getSelfExhibitId(), {\n        isContainRootNode: true,\n      })\n      .then((res: any) => {\n        const self = res.data.data[0];\n        const deps = res.data.data[0].dependencies;\n        treeData.value = [\n          {\n            title: self.resourceName + \"  (我是自身)\",\n            key: self.resourceId,\n            children: deps.map((item: any) => {\n              return {\n                title: item.resourceName + \"  (我是依赖)\",\n                key: item.resourceId,\n              };\n            }),\n          },\n        ];\n      });\n  }\n});\n</script>\n","import script from \"./WidgetDep.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./WidgetDep.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","key","style","__name","props","treeData","setup","__props","_ctx","_cache","_component_a_tree","length","defaultExpandAll","autoExpandParent","title","_","__exports__","class","_hoisted_2","_hoisted_3","_hoisted_4","freelogApp","then","res","subDep","str","forEach","sub","push","nid","isContainRootNode","self","data","deps","dependencies","value","resourceName","resourceId","children","map","item","DepTree"],"sourceRoot":""}