{"version":3,"file":"static/js/326.2eb2ca80.js","mappings":"oNAGA,MAAMA,EAAa,CAAEC,MAAO,6BACtBC,EAAa,CAAED,MAAO,IACtBE,EAAa,CAAEF,MAAO,eACtBG,EAAa,CAAC,OACdC,GAA0B,IAAAC,GAAoB,MAAO,CAAEC,GAAI,gBAAkB,MAAO,GAM1F,OAA4B,QAAiB,CAC3CC,OAAQ,cACR,KAAAC,CAAMC,GCYR,IAAIC,EAAqB,KAEzB,MAAMC,GAAO,QAAI,IACXC,GAAU,QAAI,IACdC,GAAW,QAAI,IACrB,EAAAC,WAAA,uBAC0B,CACtBC,KAAM,EACNC,MAAO,GACPC,qBAAsB,eAEvBC,MAAKC,UACJR,EAAKS,MAAQC,EAAIV,KAAKA,KAAKW,SAC3BT,EAASO,MAAQT,EAAKS,MAAM,GAAGG,YAC/BX,EAAQQ,YAAc,EAAAN,WAAA,qBACpBH,EAAKS,MAAM,GAAGI,UACd,CACEC,WAAW,IAGfC,EAAmBd,EAAQQ,MAAOP,EAASO,MAAM,IAErD,MAAMO,EAAOR,UACXN,EAASO,MAAQT,EAAKY,YACtBX,EAAQQ,YAAc,EAAAN,WAAA,qBACpBH,EAAKa,UACL,CACEC,WAAW,IAGff,EAAckB,SAASC,UAAUjB,EAAQQ,MAAMP,EAASO,MAAM,GAGhE,SAAiB,KACfV,GAAeoB,SAAS,IAE1B,MAAMJ,EAAqBP,MAAOY,EAAaC,KAC7C,MAAMX,QAAY,EAAAP,WAAA,uBAAkC,CAClDG,qBAAsB,KACtBgB,sBAAuB,IAEnBC,EAAUb,EAAIV,KAAKA,KAAKW,SAC9BY,EAAQC,SAAQhB,MAAOiB,EAAaC,KACP,eAAvBD,EAAOb,cAETb,QAAsB,EAAAI,WAAA,YAAuB,CAC3CsB,OAAQA,EACRE,UAAWC,SAASC,eAAe,gBACnCC,eAAgB,KAChBC,OAAQ,CACNC,eAAgBZ,EAChBa,gBAAiBZ,GAEnBa,IAAK,OAGR,GACD,EDPJ,MAAO,CAACC,EAAUC,KAChB,MAAMC,GAAoB,QAAkB,UACtCC,GAAyB,QAAkB,eAC3CC,GAAoB,QAAkB,UAE5C,OAAQ,WAAc,QAAoB,MAAOnD,EAAY,EAC3D,IAAAM,GAAoB,MAAOJ,EAAY,EACrC,QAAaiD,EAAmB,CAC9BC,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5B,cAAe1C,EAAKS,OACnB,CACDkC,YAAY,SAAS,EAAGC,UAAW,EACjC,QAAaN,EAAwB,KAAM,CACzCO,SAAS,SAAS,IAAM,EACtB,QAAaR,EAAmB,CAC9BS,MAAOF,EAAKhC,YACZmC,QAAUC,GAAiBhC,EAAK4B,GAChCvD,OAAO,QAAgB,CAACuD,EAAKhC,cAAgBV,EAASO,MAAQ,WAAa,MAC1E,CACDoC,SAAS,SAAS,IAAM,EACtB,IAAAnD,GAAoB,MAAOH,EAAY,EACrC,IAAAG,GAAoB,MAAO,CACzBL,MAAO,SACP4D,IAAKL,EAAKM,YAAY,GACtBC,IAAK,IACJ,KAAM,EAAG3D,QAGhBE,EAAG,GACF,KAAM,CAAC,QAAS,UAAW,aAEhCA,EAAG,GACF,SAELA,EAAG,GACF,EAAG,CAAC,kBAETD,GACA,CAEJ,IEhHA,MAAM2D,EAAc,EAEpB,O","sources":["webpack://vue3-ts-theme-[name]/./src/views/exhibit/ExhibitData.vue?c4d6","webpack://vue3-ts-theme-[name]/./src/views/exhibit/ExhibitData.vue","webpack://vue3-ts-theme-[name]/./src/views/exhibit/ExhibitData.vue?200c"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"p-40 w-100x h-100x y-auto\" }\nconst _hoisted_2 = { class: \"\" }\nconst _hoisted_3 = { class: \"h-80 over-h\" }\nconst _hoisted_4 = [\"src\"]\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", { id: \"freelog-game\" }, null, -1)\n\nimport { freelogApp } from \"freelog-runtime\";\nimport { ref, onBeforeUnmount } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ExhibitData',\n  setup(__props) {\n\nlet exhibitWidget: any = null;\n\nconst data = ref([] as any[]);\nconst gameUrl = ref(\"\");\nconst gameName = ref(\"\");\nfreelogApp\n  .getExhibitListByPaging({\n    skip: 0,\n    limit: 20,\n    articleResourceTypes: \"nesrom,红白机\",\n  })\n  .then(async (res: any) => {\n    data.value = res.data.data.dataList;\n    gameName.value = data.value[0].exhibitName;\n    gameUrl.value = await freelogApp.getExhibitFileStream(\n      data.value[0].exhibitId,\n      {\n        returnUrl: true,\n      }\n    );\n    mountExhibitWidget(gameUrl.value, gameName.value);\n  });\nconst show = async (data: any) => {\n  gameName.value = data.exhibitName;\n  gameUrl.value = await freelogApp.getExhibitFileStream(\n    data.exhibitId,\n    {\n      returnUrl: true,\n    }\n  );\n  exhibitWidget.getApi().startGame(gameUrl.value,gameName.value);\n};\n// 离开记得卸载插件喔\nonBeforeUnmount( () => {\n  exhibitWidget?.unmount();\n});\nconst mountExhibitWidget = async (url: string, name: string) => {\n  const res = await freelogApp.getExhibitListByPaging({\n    articleResourceTypes: \"插件\",\n    isLoadVersionProperty: 1,\n  });\n  const widgets = res.data.data.dataList;\n  widgets.forEach(async (widget: any, index: number) => {\n    if (widget.exhibitName === \"nes-widget\") {\n      // widget.exhibitId = widget.exhibitId + '111'\n      exhibitWidget = await freelogApp.mountWidget({\n        widget: widget, // 必传，子插件数据\n        container: document.getElementById(\"freelog-game\"), // 必传，自定义一个让插件挂载的div容器\n        topExhibitData: null, // 必传，最外层展品数据（子孙插件都需要用）\n        config: {\n          defaultGameUrl: url,\n          defaultGameName: name,\n        }, // 传递给子插件配置数据，会合并到作品上的配置数据\n        seq: null, // 如果要用多个同样的子插件需要传递序号，可以考虑与其余节点插件避免相同的序号, 注意用户数据是根据插件id+序号保存的。\n        // widget_entry: \"https://localhost:8002\", // 本地url，dev模式下，可以使用本地url调试子插件\n      });\n    }\n  });\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_card = _resolveComponent(\"a-card\")!\n  const _component_a_list_item = _resolveComponent(\"a-list-item\")!\n  const _component_a_list = _resolveComponent(\"a-list\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_a_list, {\n        grid: { gutter: 16, column: 4 },\n        \"data-source\": data.value\n      }, {\n        renderItem: _withCtx(({ item }) => [\n          _createVNode(_component_a_list_item, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_a_card, {\n                title: item.exhibitName,\n                onClick: ($event: any) => (show(item)),\n                class: _normalizeClass([item.exhibitName === gameName.value ? 'selected' : ''])\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_3, [\n                    _createElementVNode(\"img\", {\n                      class: \"h-100x\",\n                      src: item.coverImages[0],\n                      alt: \"\"\n                    }, null, 8, _hoisted_4)\n                  ])\n                ]),\n                _: 2\n              }, 1032, [\"title\", \"onClick\", \"class\"])\n            ]),\n            _: 2\n          }, 1024)\n        ]),\n        _: 1\n      }, 8, [\"data-source\"])\n    ]),\n    _hoisted_5\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"p-40 w-100x h-100x y-auto\">\n    <div class=\"\">\n      <a-list :grid=\"{ gutter: 16, column: 4 }\" :data-source=\"data\">\n        <template #renderItem=\"{ item }\">\n          <a-list-item>\n            <a-card\n              :title=\"item.exhibitName\"\n              @click=\"show(item)\"\n              :class=\"[item.exhibitName === gameName ? 'selected' : '']\"\n            >\n              <div class=\"h-80 over-h\">\n                <img class=\"h-100x\" :src=\"item.coverImages[0]\" alt=\"\" />\n              </div>\n            </a-card>\n          </a-list-item>\n        </template>\n      </a-list>\n    </div>\n    <div id=\"freelog-game\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { freelogApp } from \"freelog-runtime\";\nimport { ref, onBeforeUnmount } from \"vue\";\n\nlet exhibitWidget: any = null;\n\nconst data = ref([] as any[]);\nconst gameUrl = ref(\"\");\nconst gameName = ref(\"\");\nfreelogApp\n  .getExhibitListByPaging({\n    skip: 0,\n    limit: 20,\n    articleResourceTypes: \"nesrom,红白机\",\n  })\n  .then(async (res: any) => {\n    data.value = res.data.data.dataList;\n    gameName.value = data.value[0].exhibitName;\n    gameUrl.value = await freelogApp.getExhibitFileStream(\n      data.value[0].exhibitId,\n      {\n        returnUrl: true,\n      }\n    );\n    mountExhibitWidget(gameUrl.value, gameName.value);\n  });\nconst show = async (data: any) => {\n  gameName.value = data.exhibitName;\n  gameUrl.value = await freelogApp.getExhibitFileStream(\n    data.exhibitId,\n    {\n      returnUrl: true,\n    }\n  );\n  exhibitWidget.getApi().startGame(gameUrl.value,gameName.value);\n};\n// 离开记得卸载插件喔\nonBeforeUnmount( () => {\n  exhibitWidget?.unmount();\n});\nconst mountExhibitWidget = async (url: string, name: string) => {\n  const res = await freelogApp.getExhibitListByPaging({\n    articleResourceTypes: \"插件\",\n    isLoadVersionProperty: 1,\n  });\n  const widgets = res.data.data.dataList;\n  widgets.forEach(async (widget: any, index: number) => {\n    if (widget.exhibitName === \"nes-widget\") {\n      // widget.exhibitId = widget.exhibitId + '111'\n      exhibitWidget = await freelogApp.mountWidget({\n        widget: widget, // 必传，子插件数据\n        container: document.getElementById(\"freelog-game\"), // 必传，自定义一个让插件挂载的div容器\n        topExhibitData: null, // 必传，最外层展品数据（子孙插件都需要用）\n        config: {\n          defaultGameUrl: url,\n          defaultGameName: name,\n        }, // 传递给子插件配置数据，会合并到作品上的配置数据\n        seq: null, // 如果要用多个同样的子插件需要传递序号，可以考虑与其余节点插件避免相同的序号, 注意用户数据是根据插件id+序号保存的。\n        // widget_entry: \"https://localhost:8002\", // 本地url，dev模式下，可以使用本地url调试子插件\n      });\n    }\n  });\n};\n</script>\n<style>\n.selected {\n  background-color: lightblue;\n}\n</style>\n","import script from \"./ExhibitData.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ExhibitData.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ExhibitData.vue?vue&type=style&index=0&id=88a49eb2&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_","id","__name","setup","__props","exhibitWidget","data","gameUrl","gameName","freelogApp","skip","limit","articleResourceTypes","then","async","value","res","dataList","exhibitName","exhibitId","returnUrl","mountExhibitWidget","show","getApi","startGame","unmount","url","name","isLoadVersionProperty","widgets","forEach","widget","index","container","document","getElementById","topExhibitData","config","defaultGameUrl","defaultGameName","seq","_ctx","_cache","_component_a_card","_component_a_list_item","_component_a_list","grid","gutter","column","renderItem","item","default","title","onClick","$event","src","coverImages","alt","__exports__"],"sourceRoot":""}